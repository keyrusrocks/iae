/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package servlet;

import entite.Defile;
import entite.Organisateur;
import facade.DefileFacade;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;
import java.util.List;
import javax.ejb.EJB;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import session.AdminSession;
import session.OrganisateurSession;
import session.PubliqueSession;

/**
 *
 * @author User
 */
@WebServlet(name = "PubliqueControler", urlPatterns = {"/PubliqueControler"})
public class PubliqueControler extends HttpServlet {

    @EJB
    private PubliqueSession publiqueSession;

    @EJB
    private OrganisateurSession organisateurSession;

    @EJB
    private AdminSession adminSession;
    
    

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
         String jspClient = null;
            String act = request.getParameter("action"); 
            System.out.println("l'action recupérée "+act);
          
            
            if ((act==null) || (act.equals("vide"))) 
 {      /////*** Procedure remplissage de la BDD : juste pour la 1ere execution 
                 // les organisateurs
         adminSession.AjouterOrganisateur("51324", "star agency", "0602356985");
         adminSession.AjouterOrganisateur("56985", "Lyon agency", "0605356945");
         
         Organisateur o = organisateurSession.GetOrganisateurById("51324");
         
                // les defilés
                
         organisateurSession.AjouterDefile2("333", "tenues traditionnelles", new Date(),5200f, o, "salle 1");
         organisateurSession.AjouterDefile2("444", "fashion week", new Date(),100000f, o, "le chateau de la fashion");
         
        /////*** fin Procedure remplissage
     
     
     
       //// **** Test Section
          
          System.out.println("le nom de l'organisateur recupéré: "+o.getNom());
     
     
      //// **** Fin Test Section
     jspClient = "/recherchePublique.jsp"; 
 
 }
    else if (act.equals("SeConnecter")) 
 { 

 jspClient= doActionSeConnecter(request,response); 
 }   
            else if (act.equals("rechercheDefile")) 
 { 
        
   doActionChercherDefile(request,response); 
   jspClient = "/recherchePublique.jsp"; 
 }
        RequestDispatcher Rd; 
System.out.println("la jsp client "+jspClient); 
Rd = getServletContext().getRequestDispatcher(jspClient); 
Rd.forward(request, response); 
        }
        
        
        
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>
 protected String doActionSeConnecter(HttpServletRequest request, HttpServletResponse response) 
 throws ServletException, IOException { 

String login=request.getParameter("login"); 
	System.out.println("le login " +login);
        
        String mp=request.getParameter("mp"); 
	System.out.println("le mp " +mp);
        
        String utilisateur=request.getParameter("utilisateur"); 
	System.out.println("l'utilisateur " +utilisateur);
        
        
        
        if ( login.trim().isEmpty() || mp.isEmpty()|| utilisateur.isEmpty()) 
		  {
		     request.setAttribute( "message","Erreur,Vous n'avez pas rempli tous les champs");
		      this.getServletContext().getRequestDispatcher("/seConnecter.jsp").forward( request, response );
		  return null;
                  }
       else{
	String jsp = null;		
            if (utilisateur.equalsIgnoreCase("Organisateur")){
                            jsp="/choixOrganisateur.jsp";}
            else  if (utilisateur.equalsIgnoreCase("Mannequin")){ 
              
                 jsp="/choixMannequin.jsp";
             // à revoir psk on doit charger ses defilés
            }
               else  if (utilisateur=="Couturier"){ 
                       jsp="/choixCouturier.jsp";}
            
             System.out.println("la jsp selon l'utilisateur " +jsp);
              return jsp; 
            }
                      
        
        }
             
  protected void doActionChercherDefile(HttpServletRequest request, HttpServletResponse response) 
 throws ServletException, IOException { 

String lieu=request.getParameter("lieu"); 
String date1=request.getParameter("date1"); 
String date2=request.getParameter("date2"); 	
        
        String nomMannequin=request.getParameter("nomMannequin"); 
	String nomCouturier=request.getParameter("nomCouturier"); 
	String cout=request.getParameter("cout"); 
        
        List<Defile> list = null;
        
      
        
        if ( lieu.trim().isEmpty() & date1.isEmpty()& date2.isEmpty() & nomMannequin.isEmpty() & nomCouturier.isEmpty() & cout.isEmpty()) 
		  {
		    // quand y a aucun champ rempli on affiche tout les defilés
		        }
       else{
		 if (!lieu.trim().isEmpty()){
                     list= publiqueSession.ChercherDefileByLieu(lieu);
                     request.setAttribute( "list",list);
                 }
                 else if (!date1.trim().isEmpty() & !date1.trim().isEmpty() ){
                        //list= publiqueSession.ChercherDefileBy2Date(date1, date2);
                        request.setAttribute( "list",list);
                         }
                   else if (!date1.trim().isEmpty()){
                        // par date 
                         }
                  else if (!date2.trim().isEmpty()){
                        // par date 
                         }
                 
                  else if (!nomMannequin.trim().isEmpty()){
                        list= publiqueSession.ChercherDefileParMannequinNom(nomMannequin);
                        request.setAttribute( "list",list);
                         }
                 else if (!nomCouturier.trim().isEmpty()){
                        list= publiqueSession.ChercherDefileParCouturierNom(nomCouturier);
                        request.setAttribute( "list",list); 
                         }
                 else if (!cout.trim().isEmpty()){
                        list= publiqueSession.ChercherDefileByCout(Float.valueOf(cout));
                        request.setAttribute( "list",list); 
                       
                         }
        }

                        
        }

}
        



